<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.springframework.roo</groupId>
    <version>2.0.0.RELEASE</version>
    <artifactId>wrapping</artifactId>
    <packaging>pom</packaging>
    <name>Spring Roo - Wrapping</name>
    <description>Automates the conversion of standard JARs into OSGi bundles for Spring Roo usage. This module acts as a parent POM, but does not perform a reactor build
    because each project should be wrapped and deployment on an as-required basis.</description>
    <inceptionYear>2009</inceptionYear>
    
    <distributionManagement>
	    <repository>
	        <id>wrapping-repo</id>
	        <name>repo.spring.io-releases</name>
    	    <url>https://repo.spring.io/spring-roo</url>
	    </repository>
	    <snapshotRepository>
	        <id>wrapping-repo-snapshots</id>
	        <name>repo.spring.io-snapshots</name>
    	    <url>https://repo.spring.io/spring-roo/snapshots</url>
	    </snapshotRepository>
	</distributionManagement>

    <modules>
      <module>jtopen</module>
      <module>postgresql</module>
      <module>jtds</module>
      <module>derby-client</module>
      <module>derby</module>
      <module>firebird</module>
      <module>mysql</module>
      <module>snakeyaml</module>
      <module>jsoup</module>
      <module>bcprov-jdk15</module>
      <module>bcpg-jdk15</module>
      <module>json-simple</module>
      <module>inflector</module>
      <module>antlr4-runtime</module>
      <module>felix-framework</module>
      <module>felix-http-jetty</module>
      <!-- Generates wrapping repository -->
      <module>repository</module>
      
      
      <!-- The following modules are not necessary on Spring Roo project anymore -->
      
      <!-- <module>antlr4-runtime</module>
      <module>aopalliance</module>
      <module>bcpg-jdk15</module>
      <module>bcprov-jdk15</module>
      <module>cloud-foundry-api</module>
      <module>commons-logging</module>
      <module>connector</module>
      <module>h2</module>
      <module>hsqldb</module>
      <module>inflector</module>
      <module>javax-el</module>
      <module>javax-inject</module>
      <module>jgit</module>
      <module>jline</module>
      <module>jsch</module>
      <module>json-simple</module>
      <module>protobuf-full</module>-->
      
    </modules>
    
    <repositories>
        <repository>
            <id>maven.springframework.org.external</id>
            <name>SpringSource Maven Repository - External Releases</name>
            <url>https://maven.springframework.org/external</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-maven-release</id>
            <name>Spring Maven Release Repository</name>
            <url>https://maven.springframework.org/release</url>
        </pluginRepository>
	    <pluginRepository>
	      <id>atlassian-maven-release</id>
	      <name>Atlassian Maven Release Repository</name>
	      <url>https://maven.atlassian.com/repository/public</url>
	    </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
	        <!--
	        Each module updates the local OBR index.xml file during the install 
	        phase.
	        Then the add-on deploy bundle details to the local OBR repository at
	        ${target.osgi-repository.directory}.
	        -->
	        <groupId>org.apache.felix</groupId>
	        <artifactId>maven-bundle-plugin</artifactId>
	        <version>2.3.5</version>
	        <extensions>true</extensions>
	        <executions>
	        	<execution>
	        		<id>install-bundle</id>
		          <phase>install</phase>
		          <goals>
		            <goal>install</goal>
		          </goals>
	        	</execution>
	        	<execution>
	            <id>deploy-bundle</id>
		          <phase>install</phase>
		          <goals>
		            <goal>deploy</goal>
		          </goals>
	        	</execution>
	        </executions>
	        <configuration>
	          <supportedProjectTypes>
	            <supportedProjectTypes>bundle</supportedProjectTypes>
		          <supportedProjectTypes>jar</supportedProjectTypes>
		          <supportedProjectTypes>esa</supportedProjectTypes>
		        </supportedProjectTypes>
	          <prefixUrl>${deploy.repository.url}</prefixUrl>
	          <remoteOBR>index.xml</remoteOBR>
	          <obrDeploymentRepository>local::default::file://${target.osgi-repository.directory}</obrDeploymentRepository>
	          <instructions>
	            	<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                    <Export-Package>*;version=${project.version}</Export-Package>
                    <Bundle-Vendor>${pkgVendor} (wrapped into an OSGi bundle by the Spring Roo project build system)</Bundle-Vendor>
                    <Bundle-DocURL>${pkgDocUrl}</Bundle-DocURL>
                    <Bundle-License>${pkgLicense}</Bundle-License>
	          </instructions>
	        </configuration>
	      </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>1.3</version>
                <configuration>
                    <useAgent>true</useAgent>
                </configuration>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>2.1.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <printSummary>false</printSummary>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.0.1</version>
                <configuration>
                    <rules>
                        <DependencyConvergence />
                        <requireMavenVersion>
                            <version>3.0.1</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <version>1.6.0</version>
                        </requireJavaVersion>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.3.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.6</version>
            </plugin>
	        <plugin>
	          <groupId>org.apache.maven.plugins</groupId>
	          <artifactId>maven-assembly-plugin</artifactId>
	          <version>2.5.3</version>
	          <configuration>
	            <finalName>${project.name}-${project.version}</finalName>
	            <descriptors>
	              <descriptor>src/main/assembly/repo-assembly.xml</descriptor>
	            </descriptors>
	          </configuration>
	        </plugin>            
        </plugins>
    </build>
</project>

